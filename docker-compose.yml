
services:

  users:
    build: ./users
    command: bash -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8001"
    ports:
      - 8001:8001
    container_name: UsersAPI
    volumes:
      - ./users:/app
      - ./wait-for-it.sh:/wait-for-it.sh
    environment:
      - USERS_DB_NAME=users
      - USERS_DB_USER=postgres
      - USERS_DB_PASSWORD=postgres
      - USERS_DB_HOST=userDB
    depends_on:
      - userDB



  jobs:
    build: ./jobs
    command: bash -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8002"
    ports:
      - 8002:8002
    container_name: JobssAPI
    volumes:
      - ./jobs:/app
      - ./wait-for-it.sh:/wait-for-it.sh
    environment:
      - JOB_DB_NAME=jobs
      - JOB_DB_USER=postgres
      - JOB_DB_PASSWORD=postgres
      - JOB_DB_HOST=jobsDB
    depends_on:
      - jobsDB




  blog:
    build: ./blog
    command: bash -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8003"
    ports:
      - 8003:8003
    container_name: BlogAPI
    volumes:
      - ./blog:/app
      - ./wait-for-it.sh:/wait-for-it.sh
    environment:
      - BLOG_DB_NAME=blog
      - BLOG_DB_USER=postgres
      - BLOG_DB_PASSWORD=postgres
      - BLOG_DB_HOST=blogDB
    depends_on:
      - blogDB


  userDB:
    image: postgres:16
    environment:
      - POSTGRES_DB=users
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - users-data:/var/lib/postgresql/data


  jobsDB:
    image: postgres:16
    environment:
      - POSTGRES_DB=jobs
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - jobs-data:/var/lib/postgresql/data

  blogDB:
    image: postgres:16
    environment:
      - POSTGRES_DB=blog
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - blog-data:/var/lib/postgresql/data


volumes:
  users-data:
  jobs-data:
  blog-data:

